<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="gray.light.document.repository.WorksDocumentRepository">

    <sql id="pageable">
        <if test="page != null">
            limit #{page.from}, #{page.count}
        </if>
    </sql>

    <insert id="save"
            parameterType="WorksDocument"
            keyProperty="documentId">
        insert into works_document (works_id, document_id)
        values (#{worksId}, #{documentId})
    </insert>

    <select id="findProjectDetailsByStatus"
            resultType="ProjectDetails">
        select
        d.origin_id as origin_id,
        d.type as type,
        d.http as http,
        d.version as version,
        d.created_date as createdDate,
        d.updated_date as updatedDate,
        d.status as status,
        d.structure as structure
        from project_details as d
        inner join works_document as w
        on d.origin_id = w.document_id and
        d.status = #{status}
        <include refid="pageable"/>
    </select>

    <update id="batchUpdateProjectDetailsStatus"
            parameterType="java.util.List">
        # noinspection SqlWithoutWhere
        update project_details d
        join (<foreach collection="docs" index="index" item="doc" separator=" UNION ">select #{doc.originId} as
        origin_id, #{doc.type} as type, #{doc.status} as status</foreach>) b
        using (origin_id, type)
        set d.status = b.status
    </update>

</mapper>